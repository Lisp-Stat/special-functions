;;; -*- Mode: LISP; Base: 10; Syntax: ANSI-Common-Lisp; -*-
;;; Package: LANCZOS ; Remove package file attribute to try and prevent Genera breakage
;;; Copyright (c) 2021-2022 by Symbolics Pte. Ltd. All rights reserved.

(uiop:define-package #:lanczos
  (:use #:cl)
  (:import-from #:num-utils #:evaluate-rational)
  (:export #:g #:g-1/2 #:n #:lanczos-sum))
(in-package #:lanczos)

;;; Implementations of Lanczos approximations

#| Derived from Boost's Lanczos.hpp, copyright John Maddock 2006
https://www.boost.org/doc/libs/1_76_0/boost/math/special_functions/lanczos.hpp
https://www.boost.org/doc/libs/1_64_0/libs/math/doc/html/math_toolkit/lanczos.html
https://www.boost.org/doc/libs/1_76_0/boost/math/tools/rational.hpp

Optimal values for G for each N are taken from
http://web.mala.bc.ca/pughg/phdThesis/phdThesis.pdf, as are the
theoretical error bounds.

Constants calculated using the method described by Godfrey
http://my.fit.edu/~gabdo/gamma.txt and elaborated by Toth at
http://www.rskey.org/gamma.htm using NTL::RR at 1000 bit precision. |#


;;; Lanczos Coefficients for N=13 G=6.024680040776729583740234375
;;; Max experimental error (with arbitrary precision arithmetic) 1.196214e-17
;;; Generated with compiler: Microsoft Visual C++ version 8.0 on Win32 at Mar 23 2006

(defparameter n 13)
(defparameter g 808618867/134217728) ;6.024680040776729583740234375L0
(defparameter g-1/2 (- g (/ 2)))

(defparameter lanczos-13-numerator
  (make-array 13
	      :initial-contents '(2353137688041075968857200767445163675473/100000000000000000000000000000
				  4291980364264909876895789904700198885093/100000000000000000000000000000
				  892798980933891701236004636288679167649/25000000000000000000000000000
				  1792103442603720969991975575445893111267/100000000000000000000000000000
				  603954258635202800506429164430729792107/100000000000000000000000000000
				  359930101827930418415805768198728098493/250000000000000000000000000000
				  2488745578620541565114603864132294232163/10000000000000000000000000000000
				  3142641558540019438061423162831820536287/100000000000000000000000000000000
				  2876370628935372441225409051620849613599/1000000000000000000000000000000000
				  930281326976117475201474948580228496411/5000000000000000000000000000000000
				  4035836001182908105319001451136125306911/500000000000000000000000000000000000
				  2108242777515793458725097339207133627117/10000000000000000000000000000000000000
				  1253314137315500135082454088566918669313/500000000000000000000000000000000000000)
	      :element-type 'rational))

(defparameter lanczos-13-numerator-scaled
  (make-array 13
	      :initial-contents '(5690652191347156388090791033559122686859/100000000000000000000000000000000
				  518970215581722725953135526808035119277/5000000000000000000000000000000
				  4318156564406929572773463644488934211171/50000000000000000000000000000000
				  866777786493522766954744748118106663217/20000000000000000000000000000000
				  1460557808768506808414169982791359218571/100000000000000000000000000000000
				  87042803874516147720517754741193639117/25000000000000000000000000000000
				  6018596171681098786670226533699352302507/10000000000000000000000000000000000
				  1899982326003635662468825860899727284273/25000000000000000000000000000000000
				  3477999801257688070178155057757599493763/500000000000000000000000000000000000
				  4499445569063168119446858607650988409623/10000000000000000000000000000000000000
				  121999549265476092677991310389728258513/6250000000000000000000000000000000000
				  5098416655656676188125178644804694509993/10000000000000000000000000000000000000000
				  3030921173124453262891876982277968441611/500000000000000000000000000000000000000000)
	      :element-type 'rational))

(defparameter lanczos-13-denominator
  (make-array 13
	      :initial-contents '(0
				  39916800
				  120543840
				  150917976
				  105258076
				  45995730
				  13339535
				  2637558
				  357423
				  32670
				  1925
				  66
				  1)
	      :element-type 'rational))

(defun lanczos-sum (x &key (unscaled nil))
  "Return the Lanczos sum for x, exp(g).  If UNSCALED is non-nil, return the unscaled result"
  (if (not unscaled)
      (evaluate-rational lanczos-13-numerator-scaled lanczos-13-denominator x)
      (evaluate-rational lanczos-13-numerator lanczos-13-denominator x)))








