This is special-functions.info, produced by makeinfo version 6.8 from
special-functions.texi.

     Copyright © 2019-2022 Steve Nunez

     Permission is granted to make and distribute verbatim copies of
     this manual provided the copyright notice and this permission
     notice are preserved on all copies.

     Permission is granted to copy and distribute modified versions of
     this manual under the conditions for verbatim copying, provided
     also that the section entitled “Copying” is included exactly as in
     the original.

     Permission is granted to copy and distribute translations of this
     manual into another language, under the above conditions for
     modified versions, except that this permission notice may be
     translated as well.
INFO-DIR-SECTION Common Lisp
START-INFO-DIR-ENTRY
* SPECIAL-FUNCTIONS Reference Manual: (special-functions). The SPECIAL-FUNCTIONS Reference Manual.
END-INFO-DIR-ENTRY


File: special-functions.info,  Node: Top,  Next: Copying,  Prev: (dir),  Up: (dir)

The SPECIAL-FUNCTIONS Reference Manual
**************************************

This is the SPECIAL-FUNCTIONS Reference Manual, version 1.2.0, generated
automatically by Declt version 4.0b2.

* Menu:

* Copying:: The Microsoft Public License
* Systems:: The systems documentation
* Files:: The files documentation
* Packages:: The packages documentation
* Definitions:: The symbols documentation
* Indexes:: Concepts, functions, variables and data types

     Copyright © 2019-2022 Steve Nunez

     Permission is granted to make and distribute verbatim copies of
     this manual provided the copyright notice and this permission
     notice are preserved on all copies.

     Permission is granted to copy and distribute modified versions of
     this manual under the conditions for verbatim copying, provided
     also that the section entitled “Copying” is included exactly as in
     the original.

     Permission is granted to copy and distribute translations of this
     manual into another language, under the above conditions for
     modified versions, except that this permission notice may be
     translated as well.


File: special-functions.info,  Node: Copying,  Next: Systems,  Prev: Top,  Up: Top

Copying
*******

     This program is distributed under the terms of the Microsoft Public
     License.


File: special-functions.info,  Node: Systems,  Next: Files,  Prev: Copying,  Up: Top

1 Systems
*********

The main system appears first, followed by any subsystem dependency.

* Menu:

* The special-functions system::


File: special-functions.info,  Node: The special-functions system,  Prev: Systems,  Up: Systems

1.1 special-functions
=====================

Special functions in Common Lisp
*Long Name*
     Mathematical Special Functions
*Author*
     Steve Nunez <<steve@symbolics.tech>>
*Source Control*
     (GIT https://github.com/Lisp-Stat/special-functions.git)
*Bug Tracker*
     <https://github.com/Lisp-Stat/special-functions/issues>
*License*
     MS-PL
*Long Description*
     Special functions written in common lisp with accuracy equal to
     Boost, Python and Cephes.
*Version*
     1.2.0
*Dependencies*
        • num-utils (system).
        • float-features (system).
        • let-plus (system).
        • cephes (system).
*Source*
     *note special-functions.asd: ❨2❩.
*Child Components*
        • *note pkgdcl.lisp: ❨3❩. (file).
        • *note utils.lisp: ❨4❩. (file).
        • *note erf.lisp: ❨5❩. (file).
        • *note gamma.lisp: ❨6❩. (file).
        • *note lanczos.lisp: ❨7❩. (file).
        • *note log-gamma.lisp: ❨8❩. (file).
        • *note factorial.lisp: ❨9❩. (file).


File: special-functions.info,  Node: Files,  Next: Packages,  Prev: Systems,  Up: Top

2 Files
*******

Files are sorted by type and then listed depth-first from the systems
components trees.

* Menu:

* Lisp files::


File: special-functions.info,  Node: Lisp files,  Prev: Files,  Up: Files

2.1 Lisp
========

* Menu:

* The special-functions/special-functions․asd file::
* The special-functions/pkgdcl․lisp file::
* The special-functions/utils․lisp file::
* The special-functions/erf․lisp file::
* The special-functions/gamma․lisp file::
* The special-functions/lanczos․lisp file::
* The special-functions/log-gamma․lisp file::
* The special-functions/factorial․lisp file::


File: special-functions.info,  Node: The special-functions/special-functions․asd file,  Next: The special-functions/pkgdcl․lisp file,  Prev: Lisp files,  Up: Lisp files

2.1.1 special-functions/special-functions.asd
---------------------------------------------

*Source*
     *note special-functions.asd: ❨2❩.
*Parent Component*
     *note special-functions: ❨1❩. (system).
*ASDF Systems*
     *note special-functions: ❨1❩.


File: special-functions.info,  Node: The special-functions/pkgdcl․lisp file,  Next: The special-functions/utils․lisp file,  Prev: The special-functions/special-functions․asd file,  Up: Lisp files

2.1.2 special-functions/pkgdcl.lisp
-----------------------------------

*Source*
     *note special-functions.asd: ❨2❩.
*Parent Component*
     *note special-functions: ❨1❩. (system).
*Packages*
     *note special-functions: ❨10❩.


File: special-functions.info,  Node: The special-functions/utils․lisp file,  Next: The special-functions/erf․lisp file,  Prev: The special-functions/pkgdcl․lisp file,  Up: Lisp files

2.1.3 special-functions/utils.lisp
----------------------------------

*Dependency*
     *note pkgdcl.lisp: ❨3❩. (file).
*Source*
     *note special-functions.asd: ❨2❩.
*Parent Component*
     *note special-functions: ❨1❩. (system).
*Internals*
        • *note +square-root-2-pi+: ❨44❩. (constant).
        • *note decode-float64: ❨45❩. (function).
        • *note encode-float64: ❨40❩. (function).
        • *note sin-pi: ❨27❩. (function).


File: special-functions.info,  Node: The special-functions/erf․lisp file,  Next: The special-functions/gamma․lisp file,  Prev: The special-functions/utils․lisp file,  Up: Lisp files

2.1.4 special-functions/erf.lisp
--------------------------------

*Dependency*
     *note utils.lisp: ❨4❩. (file).
*Source*
     *note special-functions.asd: ❨2❩.
*Parent Component*
     *note special-functions: ❨1❩. (system).
*Public Interface*
        • *note erf: ❨19❩. (function).
        • *note erfc: ❨13❩. (function).
        • *note inverse-erf: ❨12❩. (function).
        • *note inverse-erfc: ❨17❩. (function).
*Internals*
        • *note erfc-scaled: ❨38❩. (function).
        • *note inverse-error: ❨46❩. (function).


File: special-functions.info,  Node: The special-functions/gamma․lisp file,  Next: The special-functions/lanczos․lisp file,  Prev: The special-functions/erf․lisp file,  Up: Lisp files

2.1.5 special-functions/gamma.lisp
----------------------------------

*Dependency*
     *note erf.lisp: ❨5❩. (file).
*Source*
     *note special-functions.asd: ❨2❩.
*Parent Component*
     *note special-functions: ❨1❩. (system).
*Public Interface*
        • *note gamma: ❨20❩. (function).
        • *note incomplete-gamma: ❨15❩. (function).
        • *note lower-incomplete-gamma: ❨18❩. (function).
        • *note regularised-gamma-prefix: ❨14❩. (function).
        • *note upper-incomplete-gamma: ❨22❩. (function).
*Internals*
        • *note gamma-aux: ❨26❩. (function).
        • *note gamma-inverse-small: ❨32❩. (function).
        • *note gamma-medium: ❨41❩. (function).
        • *note gamma-p-derivative: ❨25❩. (function).
        • *note log-maximum-double-value: ❨39❩. (constant).
        • *note log-minimum-double-value: ❨47❩. (constant).
        • *note maxgamd: ❨23❩. (constant).
        • *note p-taylor: ❨37❩. (function).
        • *note pq-asymptotic: ❨33❩. (function).
        • *note q-fraction: ❨43❩. (function).
        • *note q-gamma-half: ❨29❩. (function).
        • *note q-gamma-integer: ❨42❩. (function).
        • *note q-taylor: ❨28❩. (function).
        • *note regularised-gamma-prefix*: ❨31❩. (function).
        • *note regularised-gamma-prefix-: ❨36❩. (function).
        • *note sign-gamma: ❨24❩. (function).
        • *note stirling: ❨48❩. (function).


File: special-functions.info,  Node: The special-functions/lanczos․lisp file,  Next: The special-functions/log-gamma․lisp file,  Prev: The special-functions/gamma․lisp file,  Up: Lisp files

2.1.6 special-functions/lanczos.lisp
------------------------------------

*Dependency*
     *note gamma.lisp: ❨6❩. (file).
*Source*
     *note special-functions.asd: ❨2❩.
*Parent Component*
     *note special-functions: ❨1❩. (system).
*Packages*
     *note lanczos: ❨11❩.
*Public Interface*
        • *note g: ❨51❩. (special variable).
        • *note g-1/2: ❨50❩. (special variable).
        • *note lanczos-sum: ❨49❩. (function).
        • *note n: ❨52❩. (special variable).
*Internals*
        • *note boost-denominator: ❨60❩. (special variable).
        • *note boost-numerator: ❨55❩. (special variable).
        • *note boost-numerator-scaled: ❨58❩. (special variable).
        • *note c-to-rat: ❨57❩. (function).
        • *note floatify-coefficients: ❨61❩. (function).
        • *note lanczos-13-denominator: ❨59❩. (special variable).
        • *note lanczos-13-numerator: ❨54❩. (special variable).
        • *note lanczos-13-numerator-scaled: ❨56❩. (special variable).
        • *note rationalize-coefficients: ❨53❩. (function).


File: special-functions.info,  Node: The special-functions/log-gamma․lisp file,  Next: The special-functions/factorial․lisp file,  Prev: The special-functions/lanczos․lisp file,  Up: Lisp files

2.1.7 special-functions/log-gamma.lisp
--------------------------------------

*Dependency*
     *note lanczos.lisp: ❨7❩. (file).
*Source*
     *note special-functions.asd: ❨2❩.
*Parent Component*
     *note special-functions: ❨1❩. (system).
*Public Interface*
     *note log-gamma: ❨16❩. (function).


File: special-functions.info,  Node: The special-functions/factorial․lisp file,  Prev: The special-functions/log-gamma․lisp file,  Up: Lisp files

2.1.8 special-functions/factorial.lisp
--------------------------------------

*Dependency*
     *note log-gamma.lisp: ❨8❩. (file).
*Source*
     *note special-functions.asd: ❨2❩.
*Parent Component*
     *note special-functions: ❨1❩. (system).
*Public Interface*
     *note factorial: ❨21❩. (function).
*Internals*
        • *note factorial-table: ❨34❩. (special variable).
        • *note ramanujan: ❨30❩. (function).
        • *note sam-ramanujan: ❨35❩. (function).


File: special-functions.info,  Node: Packages,  Next: Definitions,  Prev: Files,  Up: Top

3 Packages
**********

Packages are listed by definition order.

* Menu:

* The special-functions package::
* The lanczos package::


File: special-functions.info,  Node: The special-functions package,  Next: The lanczos package,  Prev: Packages,  Up: Packages

3.1 special-functions
=====================

*Source*
     *note pkgdcl.lisp: ❨3❩.
*Nicknames*
        • specfun
        • spfn
*Use List*
        • common-lisp.
        • let-plus.
        • num-utils.arithmetic.
        • num-utils.polynomial.
*Used By List*
        • distributions.
        • special-functions-tests.
*Public Interface*
        • *note erf: ❨19❩. (function).
        • *note erfc: ❨13❩. (function).
        • *note factorial: ❨21❩. (function).
        • *note gamma: ❨20❩. (function).
        • *note incomplete-gamma: ❨15❩. (function).
        • *note inverse-erf: ❨12❩. (function).
        • *note inverse-erfc: ❨17❩. (function).
        • *note log-gamma: ❨16❩. (function).
        • *note lower-incomplete-gamma: ❨18❩. (function).
        • *note regularised-gamma-prefix: ❨14❩. (function).
        • *note upper-incomplete-gamma: ❨22❩. (function).
*Internals*
        • *note +square-root-2-pi+: ❨44❩. (constant).
        • *note decode-float64: ❨45❩. (function).
        • *note encode-float64: ❨40❩. (function).
        • *note erfc-scaled: ❨38❩. (function).
        • *note factorial-table: ❨34❩. (special variable).
        • *note gamma-aux: ❨26❩. (function).
        • *note gamma-inverse-small: ❨32❩. (function).
        • *note gamma-medium: ❨41❩. (function).
        • *note gamma-p-derivative: ❨25❩. (function).
        • *note inverse-error: ❨46❩. (function).
        • *note log-maximum-double-value: ❨39❩. (constant).
        • *note log-minimum-double-value: ❨47❩. (constant).
        • *note maxgamd: ❨23❩. (constant).
        • *note p-taylor: ❨37❩. (function).
        • *note pq-asymptotic: ❨33❩. (function).
        • *note q-fraction: ❨43❩. (function).
        • *note q-gamma-half: ❨29❩. (function).
        • *note q-gamma-integer: ❨42❩. (function).
        • *note q-taylor: ❨28❩. (function).
        • *note ramanujan: ❨30❩. (function).
        • *note regularised-gamma-prefix*: ❨31❩. (function).
        • *note regularised-gamma-prefix-: ❨36❩. (function).
        • *note sam-ramanujan: ❨35❩. (function).
        • *note sign-gamma: ❨24❩. (function).
        • *note sin-pi: ❨27❩. (function).
        • *note stirling: ❨48❩. (function).


File: special-functions.info,  Node: The lanczos package,  Prev: The special-functions package,  Up: Packages

3.2 lanczos
===========

*Source*
     *note lanczos.lisp: ❨7❩.
*Use List*
     common-lisp.
*Public Interface*
        • *note g: ❨51❩. (special variable).
        • *note g-1/2: ❨50❩. (special variable).
        • *note lanczos-sum: ❨49❩. (function).
        • *note n: ❨52❩. (special variable).
*Internals*
        • *note boost-denominator: ❨60❩. (special variable).
        • *note boost-numerator: ❨55❩. (special variable).
        • *note boost-numerator-scaled: ❨58❩. (special variable).
        • *note c-to-rat: ❨57❩. (function).
        • *note floatify-coefficients: ❨61❩. (function).
        • *note lanczos-13-denominator: ❨59❩. (special variable).
        • *note lanczos-13-numerator: ❨54❩. (special variable).
        • *note lanczos-13-numerator-scaled: ❨56❩. (special variable).
        • *note rationalize-coefficients: ❨53❩. (function).


File: special-functions.info,  Node: Definitions,  Next: Indexes,  Prev: Packages,  Up: Top

4 Definitions
*************

Definitions are sorted by export status, category, package, and then by
lexicographic order.

* Menu:

* Public Interface::
* Internals::


File: special-functions.info,  Node: Public Interface,  Next: Internals,  Prev: Definitions,  Up: Definitions

4.1 Public Interface
====================

* Menu:

* Public special variables::
* Public ordinary functions::


File: special-functions.info,  Node: Public special variables,  Next: Public ordinary functions,  Prev: Public Interface,  Up: Public Interface

4.1.1 Special variables
-----------------------

 -- Special Variable: g
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Special Variable: g-1/2
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Special Variable: n
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.


File: special-functions.info,  Node: Public ordinary functions,  Prev: Public special variables,  Up: Public Interface

4.1.2 Ordinary functions
------------------------

 -- Function: erf (n)
     Returns the error function of n
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note erf.lisp: ❨5❩.
 -- Function: erfc (x)
     Return the complementary error function erfc(x) = 1-erf(x)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note erf.lisp: ❨5❩.
 -- Function: factorial (x)
     Return the factorial value X! for X <= MAX-FACTORIAL;
     DOUBLE-FLOAT-POSITIVE-INFINITY if x < 0.  X must be an INTEGER.
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note factorial.lisp: ❨9❩.
 -- Function: gamma (x)
     Return gamma(x), x <= +MAXGAMD+; NAN/RTE if x is a non-positive
     integer
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: incomplete-gamma (a x &key compute-prefix)
     Return the normalised incomplete gamma functions P and Q, a>=0,
     x>=0 P(a,x) = integral(exp(-t)*t^(a-1), t=0..x )/gamma(a)
     Q(a,x) = integral(exp(-t)*t^(a-1), t=x..Inf)/gamma(a))
     dax = x^a*exp(-x)/gamma(a) (prefix factor)

     Returns three values:
     P is the first value, Q the second, DAX the third, e.g.  (values p
     q dax)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: inverse-erf (x)
     Return the inverse function of erf: (erf (inverse-erf x)) = x, -1 <
     x < 1
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note erf.lisp: ❨5❩.
 -- Function: inverse-erfc (x)
     Return the inverse function of erfc: (erfc (inverse-erfc x)) = x, 0
     < x < 2
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note erf.lisp: ❨5❩.
 -- Function: lanczos-sum (x &key unscaled)
     Return the Lanczos sum for x, exp(g).  If UNSCALED is non-nil,
     return the unscaled result
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Function: log-gamma (n)
     Return the logarithm of gamma(x)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note log-gamma.lisp: ❨8❩.
 -- Function: lower-incomplete-gamma (x a)
     Return the normalised lower incomplete gamma function P(a,x), a>=0,
     x>=0 P(a,x) = integral(exp(-t)*t^(a-1), t=0..x)/gamma(a)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: regularised-gamma-prefix (a x)
     Return x^a * exp(-x) / gamma(a)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: upper-incomplete-gamma (x a)
     Return the normalised upper incomplete gamma function Q(a,x), a>=0,
     x>=0 Q(a,x) = integral(exp(-t)*t^(a-1), t=x..Inf)/gamma(a))
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.


File: special-functions.info,  Node: Internals,  Prev: Public Interface,  Up: Definitions

4.2 Internals
=============

* Menu:

* Private constants::
* Private special variables::
* Private ordinary functions::


File: special-functions.info,  Node: Private constants,  Next: Private special variables,  Prev: Internals,  Up: Internals

4.2.1 Constants
---------------

 -- Constant: +square-root-2-pi+
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Constant: log-maximum-double-value
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Constant: log-minimum-double-value
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Constant: maxgamd
     Maximum argument for gamma
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.


File: special-functions.info,  Node: Private special variables,  Next: Private ordinary functions,  Prev: Private constants,  Up: Internals

4.2.2 Special variables
-----------------------

 -- Special Variable: boost-denominator
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Special Variable: boost-numerator
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Special Variable: boost-numerator-scaled
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Special Variable: factorial-table
     Table of factorials for integer values up to 100
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note factorial.lisp: ❨9❩.
 -- Special Variable: lanczos-13-denominator
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Special Variable: lanczos-13-numerator
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Special Variable: lanczos-13-numerator-scaled
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.


File: special-functions.info,  Node: Private ordinary functions,  Prev: Private special variables,  Up: Internals

4.2.3 Ordinary functions
------------------------

 -- Function: c-to-rat (int frac)
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Function: decode-float64 (x)
     Convert the (unsigned-byte 64) bit representation into a native
     double-float
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Function: encode-float64 (x)
     Returns the bit representation of the double-float X as an
     (unsigned-byte 64)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Function: erfc-scaled (x)
     p/q := exp(x^2)*erfc(x), 1<=x<=128
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note erf.lisp: ❨5❩.
 -- Function: floatify-coefficients (coeff)
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Function: gamma-aux (x)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: gamma-inverse-small (x)
     Return 1/gamma(x) for |x| < 0.03125
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: gamma-medium (x)
     Return gamma(x), |x| <= 13, x negative integer produces div by 0
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: gamma-p-derivative (a x)
     Partial derivative with respect to x of the incomplete gamma
     function
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: inverse-error (p q)
     Return value of inverse error function: erf_inv(p) if p <= 0.5,
     erfc_inv(q) otherwise
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note erf.lisp: ❨5❩.
 -- Function: p-taylor (a x dax)
     Temme/Gautschi code for P(a,x), dax = x^a*exp(-x)/gamma(a+1)
     Returns (values p q)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: pq-asymptotic (a x)
     Incomplete gamma functions for large A and A near X
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: q-fraction (a x dax)
     Continued fraction for Q(a,x)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: q-gamma-half (a x)
     Calculates normalised Q when a is a half-integer for a < min(30,
     x+1)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: q-gamma-integer (a x)
     Return Q(a,x) when A is an integer, A < min(30,x+1)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: q-taylor (a x)
     Temme/Gautschi code for Q(a,x) when x < 1
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: ramanujan (x)
     Ramanujan’s original approximation of n!
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note factorial.lisp: ❨9❩.
 -- Function: rationalize-coefficients (coeff)
     *Package*
          *note lanczos: ❨11❩.
     *Source*
          *note lanczos.lisp: ❨7❩.
 -- Function: regularised-gamma-prefix* (a x)
     Return x^a * exp(-x) / gamma(a)
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: regularised-gamma-prefix- (a z)
     Return (z^a)(e^-z)/gamma(a), the power term prefix, using Lanczos
     summation Most of the error occurs in this function
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: sam-ramanujan (x)
     Modification of Ramanujan’s approximation of n!  by Sidney A.
     Morris
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note factorial.lisp: ❨9❩.
 -- Function: sign-gamma (x)
     Return sign(gamma(x)), invalid for 0 or negative integer
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.
 -- Function: sin-pi (x)
     Returns (sin (* pi x))
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Function: stirling (x)
     Return gamma(x) for x > 13
     *Package*
          *note special-functions: ❨10❩.
     *Source*
          *note gamma.lisp: ❨6❩.


File: special-functions.info,  Node: Indexes,  Prev: Definitions,  Up: Top

Appendix A Indexes
******************

* Menu:

* Concept index::
* Function index::
* Variable index::
* Data type index::


File: special-functions.info,  Node: Concept index,  Next: Function index,  Prev: Indexes,  Up: Indexes

A.1 Concepts
============


File: special-functions.info,  Node: Function index,  Next: Variable index,  Prev: Concept index,  Up: Indexes

A.2 Functions
=============

 [index ]
* Menu:

* c-to-rat:                              Private ordinary functions.
                                                              (line   6)
* decode-float64:                        Private ordinary functions.
                                                              (line  11)
* encode-float64:                        Private ordinary functions.
                                                              (line  18)
* erf:                                   Public ordinary functions.
                                                              (line   6)
* erfc:                                  Public ordinary functions.
                                                              (line  12)
* erfc-scaled:                           Private ordinary functions.
                                                              (line  25)
* factorial:                             Public ordinary functions.
                                                              (line  18)
* floatify-coefficients:                 Private ordinary functions.
                                                              (line  31)
* Function, c-to-rat:                    Private ordinary functions.
                                                              (line   7)
* Function, decode-float64:              Private ordinary functions.
                                                              (line  12)
* Function, encode-float64:              Private ordinary functions.
                                                              (line  19)
* Function, erf:                         Public ordinary functions.
                                                              (line   7)
* Function, erfc:                        Public ordinary functions.
                                                              (line  13)
* Function, erfc-scaled:                 Private ordinary functions.
                                                              (line  26)
* Function, factorial:                   Public ordinary functions.
                                                              (line  19)
* Function, floatify-coefficients:       Private ordinary functions.
                                                              (line  32)
* Function, gamma:                       Public ordinary functions.
                                                              (line  26)
* Function, gamma-aux:                   Private ordinary functions.
                                                              (line  37)
* Function, gamma-inverse-small:         Private ordinary functions.
                                                              (line  42)
* Function, gamma-medium:                Private ordinary functions.
                                                              (line  48)
* Function, gamma-p-derivative:          Private ordinary functions.
                                                              (line  54)
* Function, incomplete-gamma:            Public ordinary functions.
                                                              (line  33)
* Function, inverse-erf:                 Public ordinary functions.
                                                              (line  46)
* Function, inverse-erfc:                Public ordinary functions.
                                                              (line  53)
* Function, inverse-error:               Private ordinary functions.
                                                              (line  61)
* Function, lanczos-sum:                 Public ordinary functions.
                                                              (line  60)
* Function, log-gamma:                   Public ordinary functions.
                                                              (line  67)
* Function, lower-incomplete-gamma:      Public ordinary functions.
                                                              (line  73)
* Function, p-taylor:                    Private ordinary functions.
                                                              (line  68)
* Function, pq-asymptotic:               Private ordinary functions.
                                                              (line  75)
* Function, q-fraction:                  Private ordinary functions.
                                                              (line  81)
* Function, q-gamma-half:                Private ordinary functions.
                                                              (line  87)
* Function, q-gamma-integer:             Private ordinary functions.
                                                              (line  94)
* Function, q-taylor:                    Private ordinary functions.
                                                              (line 100)
* Function, ramanujan:                   Private ordinary functions.
                                                              (line 106)
* Function, rationalize-coefficients:    Private ordinary functions.
                                                              (line 112)
* Function, regularised-gamma-prefix:    Public ordinary functions.
                                                              (line  80)
* Function, regularised-gamma-prefix*:   Private ordinary functions.
                                                              (line 117)
* Function, regularised-gamma-prefix-:   Private ordinary functions.
                                                              (line 123)
* Function, sam-ramanujan:               Private ordinary functions.
                                                              (line 130)
* Function, sign-gamma:                  Private ordinary functions.
                                                              (line 137)
* Function, sin-pi:                      Private ordinary functions.
                                                              (line 143)
* Function, stirling:                    Private ordinary functions.
                                                              (line 149)
* Function, upper-incomplete-gamma:      Public ordinary functions.
                                                              (line  86)
* gamma:                                 Public ordinary functions.
                                                              (line  25)
* gamma-aux:                             Private ordinary functions.
                                                              (line  36)
* gamma-inverse-small:                   Private ordinary functions.
                                                              (line  41)
* gamma-medium:                          Private ordinary functions.
                                                              (line  47)
* gamma-p-derivative:                    Private ordinary functions.
                                                              (line  53)
* incomplete-gamma:                      Public ordinary functions.
                                                              (line  32)
* inverse-erf:                           Public ordinary functions.
                                                              (line  45)
* inverse-erfc:                          Public ordinary functions.
                                                              (line  52)
* inverse-error:                         Private ordinary functions.
                                                              (line  60)
* lanczos-sum:                           Public ordinary functions.
                                                              (line  59)
* log-gamma:                             Public ordinary functions.
                                                              (line  66)
* lower-incomplete-gamma:                Public ordinary functions.
                                                              (line  72)
* p-taylor:                              Private ordinary functions.
                                                              (line  67)
* pq-asymptotic:                         Private ordinary functions.
                                                              (line  74)
* q-fraction:                            Private ordinary functions.
                                                              (line  80)
* q-gamma-half:                          Private ordinary functions.
                                                              (line  86)
* q-gamma-integer:                       Private ordinary functions.
                                                              (line  93)
* q-taylor:                              Private ordinary functions.
                                                              (line  99)
* ramanujan:                             Private ordinary functions.
                                                              (line 105)
* rationalize-coefficients:              Private ordinary functions.
                                                              (line 111)
* regularised-gamma-prefix:              Public ordinary functions.
                                                              (line  79)
* regularised-gamma-prefix*:             Private ordinary functions.
                                                              (line 116)
* regularised-gamma-prefix-:             Private ordinary functions.
                                                              (line 122)
* sam-ramanujan:                         Private ordinary functions.
                                                              (line 129)
* sign-gamma:                            Private ordinary functions.
                                                              (line 136)
* sin-pi:                                Private ordinary functions.
                                                              (line 142)
* stirling:                              Private ordinary functions.
                                                              (line 148)
* upper-incomplete-gamma:                Public ordinary functions.
                                                              (line  85)


File: special-functions.info,  Node: Variable index,  Next: Data type index,  Prev: Function index,  Up: Indexes

A.3 Variables
=============

 [index ]
* Menu:

* +square-root-2-pi+:                    Private constants.    (line  6)
* boost-denominator:                     Private special variables.
                                                               (line  6)
* boost-numerator:                       Private special variables.
                                                               (line 11)
* boost-numerator-scaled:                Private special variables.
                                                               (line 16)
* Constant, +square-root-2-pi+:          Private constants.    (line  7)
* Constant, log-maximum-double-value:    Private constants.    (line 12)
* Constant, log-minimum-double-value:    Private constants.    (line 17)
* Constant, maxgamd:                     Private constants.    (line 22)
* factorial-table:                       Private special variables.
                                                               (line 21)
* g:                                     Public special variables.
                                                               (line  6)
* g-1/2:                                 Public special variables.
                                                               (line 11)
* lanczos-13-denominator:                Private special variables.
                                                               (line 27)
* lanczos-13-numerator:                  Private special variables.
                                                               (line 32)
* lanczos-13-numerator-scaled:           Private special variables.
                                                               (line 37)
* log-maximum-double-value:              Private constants.    (line 11)
* log-minimum-double-value:              Private constants.    (line 16)
* maxgamd:                               Private constants.    (line 21)
* n:                                     Public special variables.
                                                               (line 16)
* Special Variable, boost-denominator:   Private special variables.
                                                               (line  7)
* Special Variable, boost-numerator:     Private special variables.
                                                               (line 12)
* Special Variable, boost-numerator-scaled: Private special variables.
                                                               (line 17)
* Special Variable, factorial-table:     Private special variables.
                                                               (line 22)
* Special Variable, g:                   Public special variables.
                                                               (line  7)
* Special Variable, g-1/2:               Public special variables.
                                                               (line 12)
* Special Variable, lanczos-13-denominator: Private special variables.
                                                               (line 28)
* Special Variable, lanczos-13-numerator: Private special variables.
                                                               (line 33)
* Special Variable, lanczos-13-numerator-scaled: Private special variables.
                                                               (line 38)
* Special Variable, n:                   Public special variables.
                                                               (line 17)


File: special-functions.info,  Node: Data type index,  Prev: Variable index,  Up: Indexes

A.4 Data types
==============

 [index ]
* Menu:

* erf.lisp:                              The special-functions/erf․lisp file.
                                                                (line 6)
* factorial.lisp:                        The special-functions/factorial․lisp file.
                                                                (line 6)
* File, erf.lisp:                        The special-functions/erf․lisp file.
                                                                (line 6)
* File, factorial.lisp:                  The special-functions/factorial․lisp file.
                                                                (line 6)
* File, gamma.lisp:                      The special-functions/gamma․lisp file.
                                                                (line 6)
* File, lanczos.lisp:                    The special-functions/lanczos․lisp file.
                                                                (line 6)
* File, log-gamma.lisp:                  The special-functions/log-gamma․lisp file.
                                                                (line 6)
* File, pkgdcl.lisp:                     The special-functions/pkgdcl․lisp file.
                                                                (line 6)
* File, special-functions.asd:           The special-functions/special-functions․asd file.
                                                                (line 6)
* File, utils.lisp:                      The special-functions/utils․lisp file.
                                                                (line 6)
* gamma.lisp:                            The special-functions/gamma․lisp file.
                                                                (line 6)
* lanczos:                               The lanczos package.   (line 6)
* lanczos.lisp:                          The special-functions/lanczos․lisp file.
                                                                (line 6)
* log-gamma.lisp:                        The special-functions/log-gamma․lisp file.
                                                                (line 6)
* Package, lanczos:                      The lanczos package.   (line 6)
* Package, special-functions:            The special-functions package.
                                                                (line 6)
* pkgdcl.lisp:                           The special-functions/pkgdcl․lisp file.
                                                                (line 6)
* special-functions:                     The special-functions system.
                                                                (line 6)
* special-functions <1>:                 The special-functions package.
                                                                (line 6)
* special-functions.asd:                 The special-functions/special-functions․asd file.
                                                                (line 6)
* System, special-functions:             The special-functions system.
                                                                (line 6)
* utils.lisp:                            The special-functions/utils․lisp file.
                                                                (line 6)



Tag Table:
Node: Top947
Node: Copying2171
Node: Systems2362
Node: The special-functions system2584
Ref: ❨1❩2728
Node: Files3729
Node: Lisp files3949
Node: The special-functions/special-functions․asd file4427
Ref: ❨2❩4696
Node: The special-functions/pkgdcl․lisp file4871
Ref: ❨3❩5149
Node: The special-functions/utils․lisp file5321
Ref: ❨4❩5584
Node: The special-functions/erf․lisp file5991
Ref: ❨5❩6249
Node: The special-functions/gamma․lisp file6760
Ref: ❨6❩7024
Node: The special-functions/lanczos․lisp file8487
Ref: ❨7❩8761
Node: The special-functions/log-gamma․lisp file9819
Ref: ❨8❩10101
Node: The special-functions/factorial․lisp file10340
Ref: ❨9❩10572
Node: Packages10996
Node: The special-functions package11222
Ref: ❨10❩11397
Node: The lanczos package13784
Ref: ❨11❩13922
Node: Definitions14838
Node: Public Interface15101
Node: Public special variables15326
Ref: ❨51❩15546
Ref: ❨50❩15677
Ref: ❨52❩15804
Node: Public ordinary functions15908
Ref: ❨19❩16103
Ref: ❨13❩16272
Ref: ❨21❩16473
Ref: ❨20❩16740
Ref: ❨15❩16990
Ref: ❨12❩17483
Ref: ❨17❩17707
Ref: ❨49❩17946
Ref: ❨16❩18177
Ref: ❨18❩18373
Ref: ❨14❩18664
Ref: ❨22❩18855
Node: Internals19105
Node: Private constants19320
Ref: ❨44❩19512
Ref: ❨39❩19662
Ref: ❨47❩19812
Ref: ❨23❩19945
Node: Private special variables20089
Ref: ❨60❩20321
Ref: ❨55❩20462
Ref: ❨58❩20610
Ref: ❨34❩20751
Ref: ❨59❩20965
Ref: ❨54❩21111
Ref: ❨56❩21264
Node: Private ordinary functions21368
Ref: ❨57❩21570
Ref: ❨45❩21706
Ref: ❨40❩21937
Ref: ❨38❩22166
Ref: ❨61❩22359
Ref: ❨26❩22490
Ref: ❨32❩22639
Ref: ❨41❩22822
Ref: ❨25❩23042
Ref: ❨46❩23267
Ref: ❨37❩23505
Ref: ❨33❩23742
Ref: ❨43❩23945
Ref: ❨29❩24124
Ref: ❨42❩24351
Ref: ❨28❩24548
Ref: ❨30❩24734
Ref: ❨53❩24944
Ref: ❨31❩25093
Ref: ❨36❩25287
Ref: ❨35❩25558
Ref: ❨24❩25783
Ref: ❨27❩25981
Ref: ❨48❩26147
Node: Indexes26291
Node: Concept index26494
Node: Function index26628
Node: Variable index36993
Node: Data type index40573

End Tag Table


Local Variables:
coding: utf-8
End:
